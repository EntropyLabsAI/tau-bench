[
  {
    "task_id": 1,
    "reward": 0.0,
    "info": {
      "error": "Object of type MockRetailDomainEnv is not JSON serializable",
      "traceback": "Traceback (most recent call last):\n  File \"/Users/david/PycharmProjects/tau-bench/run.py\", line 95, in _run\n    res = agent.solve(\n          ^^^^^^^^^^^^\n  File \"/Users/david/PycharmProjects/tau-bench/tau_bench/agents/tool_calling_agent.py\", line 53, in solve\n    env_response = env.step(action)\n                   ^^^^^^^^^^^^^^^^\n  File \"/Users/david/PycharmProjects/tau-bench/tau_bench/envs/base.py\", line 132, in step\n    observation = self.respond_to_user(action.kwargs[\"content\"])\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/david/PycharmProjects/agent-control-plane/entropy_labs/src/entropy_labs/supervision/decorators.py\", line 63, in wrapper\n    review_id = send_supervision_request(supervisor, func, supervision_context, execution_id, tool_id, tool_args=tool_args, tool_kwargs=tool_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/david/PycharmProjects/agent-control-plane/entropy_labs/src/entropy_labs/api/sentinel_api_client_helper.py\", line 388, in send_supervision_request\n    supervision_status_response = create_supervision_request_sync_detailed(\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/david/PycharmProjects/agent-control-plane/entropy_labs/src/entropy_labs/sentinel_api_client/sentinel_api_client/api/reviews/create_supervision_request.py\", line 79, in sync_detailed\n    response = client.get_httpx_client().request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/david/miniconda3/envs/tau-bench/lib/python3.11/site-packages/httpx/_client.py\", line 824, in request\n    request = self.build_request(\n              ^^^^^^^^^^^^^^^^^^^\n  File \"/Users/david/miniconda3/envs/tau-bench/lib/python3.11/site-packages/httpx/_client.py\", line 358, in build_request\n    return Request(\n           ^^^^^^^^\n  File \"/Users/david/miniconda3/envs/tau-bench/lib/python3.11/site-packages/httpx/_models.py\", line 342, in __init__\n    headers, stream = encode_request(\n                      ^^^^^^^^^^^^^^^\n  File \"/Users/david/miniconda3/envs/tau-bench/lib/python3.11/site-packages/httpx/_content.py\", line 214, in encode_request\n    return encode_json(json)\n           ^^^^^^^^^^^^^^^^^\n  File \"/Users/david/miniconda3/envs/tau-bench/lib/python3.11/site-packages/httpx/_content.py\", line 177, in encode_json\n    body = json_dumps(json).encode(\"utf-8\")\n           ^^^^^^^^^^^^^^^^\n  File \"/Users/david/miniconda3/envs/tau-bench/lib/python3.11/json/__init__.py\", line 231, in dumps\n    return _default_encoder.encode(obj)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/david/miniconda3/envs/tau-bench/lib/python3.11/json/encoder.py\", line 200, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/david/miniconda3/envs/tau-bench/lib/python3.11/json/encoder.py\", line 258, in iterencode\n    return _iterencode(o, 0)\n           ^^^^^^^^^^^^^^^^^\n  File \"/Users/david/miniconda3/envs/tau-bench/lib/python3.11/json/encoder.py\", line 180, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type MockRetailDomainEnv is not JSON serializable\n"
    },
    "traj": [],
    "trial": 0
  }
]